version: 1
meta:
  branch: feat/offers-dashboard
  defaultMerchantId: "CHANGE_ME"   # set your merchant
  defaultStoreId: 30141222         # matches current UI header snapshot
  defaultCityId: 710000000         # matches product links
  commit_style: conventional
backlog:
  - id: EXP-001
    title: Merchant-aware export/import (schema v2)
    desc: Export CSV/XLSX and import accept merchantId/storeId/cityId; include stock + pricebot fields.
    ac:
      - Export includes columns: merchantId, storeId, cityId, productId, sku, name, ourPrice, stock, active, min, max, step, interval.
      - Import validates via zod (no mutation on validation-only); preview + toasts in UI.
      - Persist settings deltas to `server/db/pricebot.settings.json` (v2).
    estimate: 4h
    labels: [export, import, zod, ui]
  - id: RUN-001
    title: Run + Bulk run flow (dry by default)
    desc: Single SKU and bulk endpoints; proposals returned; confirm-to-apply path.
    ac:
      - `POST /api/pricebot/run` accepts merchantId, storeId, cityId, sku/productId, dry; returns proposal.
      - Bulk route chunks ~200 SKUs; progress + summary returned.
      - UI confirm modal before apply; success/error toasts.
    estimate: 5h
    labels: [pricebot, run]
  - id: KPI-001
    title: KPIs + /stats
    desc: Tiles for overall health.
    ac:
      - `/api/pricebot/stats` returns: totalSKUs, activeSKUs, zeroStock, competingSKUs, winRate, lastRunCount, lastRunAvgDelta.
      - UI renders 4–6 tiles; zero‑stock rows greyed/inactive.
    estimate: 3h
    labels: [kpi, ui]
  - id: UX-001
    title: Opponents modal polish
    desc: Badges for ignored sellers, debounce save tick, and ensure merchantId is passed everywhere.
    ac:
      - Ignored sellers show a badge and are excluded from proposals.
      - Saves persist to settings v2; “Saved” tick after debounce.
    estimate: 2h
    labels: [ui, opponents]
in_progress:
  - id: CORE-001
    title: Wire merchantId/cityId end-to-end
    desc: Ensure every route + UI call is merchant-aware and cached by merchant/store/city/product.
    ac:
      - Offers/opponents/settings/export/import/run/bulk/stats accept merchantId; UI passes it.
      - Caches keyed by merchant+store+city or product as appropriate.
    estimate: 2h
    labels: [core]
done:
  - id: OFR-001
    title: Offers route accepts merchantId + search
    ac:
      - `GET /api/merchant/offers` accepts merchantId; uses that merchant's cookie file; supports `q` text filter.
  - id: OPP-001
    title: Opponents route merchant-aware + caching
    ac:
      - `GET /api/pricebot/opponents` returns sellerId, sellerName, price, isYou, isIgnored; cached per merchant+city+product.
  - id: SET-002
    title: Settings v2
    ac:
      - `GET/POST /api/pricebot/settings` accept merchantId/storeId and persist to `server/db/pricebot.settings.json` (v2).
  - id: UI-001
    title: Table + modal wiring
    ac:
      - PricebotTable requests offers with selected storeId and runs proposals via `/api/pricebot/run` (dry).
      - OpponentsModal requests with merchantId; per-seller ignores persist through settings.
  - id: CORE-001
    title: Wire merchantId/cityId end-to-end
    ac:
      - Offers/opponents/settings/export/import/run accept merchantId/storeId; UI passes it.
      - Caches keyed by merchant+city+product where applicable; unified v2 settings source of truth.
